/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        hrm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "balanced";
        };
    };

    macros {
        arrow_fn: arrow_fn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "ARROW_FN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LA(SPACE)  &kp Q            &kp W            &kp E         &kp R                  &kp T        &kp Y            &kp U             &kp I         &kp O        &kp P                     &kp LEFT_BRACKET
&kp GRAVE      &hrm LEFT_GUI A  &hrm LEFT_ALT S  &hrm LCTRL D  &lt 1 F                &kp G        &kp H            &lt 1 J           &hrm RCTRL K  &hrm RALT L  &hrm RIGHT_GUI SEMICOLON  &kp SQT
&kp LG(SPACE)  &kp Z            &kp X            &kp C         &kp V                  &kp B        &kp N            &kp M             &kp COMMA     &kp DOT      &kp FSLH                  &kp RBKT
                                                 &kp ESCAPE    &hrm LEFT_SHIFT SPACE  &lt 3 TAB    &lt 2 BACKSPACE  &hrm RSHFT ENTER  &kp DELETE
            >;
        };

        navigation {
            bindings = <
&none  &none     &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &none     &kp PAGE_DOWN   &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &kp PAGE_UP  &kp INSERT       &none
&none  &kp LGUI  &kp LALT           &kp LCTRL         &kp LSHFT        &none     &kp LEFT_ARROW  &kp DOWN          &kp UP             &kp RIGHT    &kp PRINTSCREEN  &none
&none  &none     &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &none     &kp HOME        &kp LC(LEFT)      &kp LC(RIGHT)      &kp END      &none            &none
                                    &trans            &trans           &trans    &trans          &trans            &trans
            >;
        };

        symbols {
            bindings = <
&none  &kp CARET       &kp LEFT_BRACE    &kp PLUS       &kp RIGHT_BRACE    &kp DOLLAR           &none     &kp PERCENT           &kp ASTERISK   &kp HASH               &kp TILDE      &none
&none  &kp GRAVE       &kp LEFT_BRACKET  &kp EQUAL      &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES    &kp PIPE  &kp LEFT_PARENTHESIS  &kp SQT        &kp RIGHT_PARENTHESIS  &kp BACKSLASH  &none
&none  &kp UNDERSCORE  &kp EXCLAMATION   &kp AMPERSAND  &kp MINUS          &kp AT_SIGN          &none     &arrow_fn             &kp LESS_THAN  &kp GREATER_THAN       &kp QUESTION   &none
                                         &trans         &trans             &trans               &trans    &trans                &trans
            >;
        };

        number {
            bindings = <
&none  &kp F10  &kp F7  &kp F8  &kp F9  &kp PERCENT    &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp FSLH   &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp EQUAL      &kp PLUS      &kp N4  &kp N5  &kp N6  &kp MINUS  &none
&none  &kp F12  &kp F1  &kp F2  &kp F3  &none          &kp N0        &kp N1  &kp N2  &kp N3  &kp DOT    &none
                        &trans  &trans  &trans         &trans        &trans  &trans
            >;
        };

        additional {
            bindings = <
&none  &none  &none      &none      &none      &none     &bt BT_CLR    &none         &none         &none         &none         &bt BT_CLR_ALL
&none  &none  &mkp RCLK  &mkp MCLK  &mkp LCLK  &none     &bt BT_SEL 3  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 4  &none
&none  &none  &none      &none      &none      &none     &none         &none         &none         &none         &none         &none
                         &trans     &trans     &trans    &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        activate_additional {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
